๐ฏ ุงููุฏู:
ุฑุจุท ุงููุชุฌุฑ ุงูุฅููุชุฑููู ุงูุฎุงุต ุจู (ูุจูู ุจู React ุฃู Next.js) ุจุฎุฏูุฉ Supabase ุจุญูุซ ูุชู:

ุญูุธ ุจูุงูุงุช ุงูููุชุฌุงุช ูุงูุทูุจุงุช ูุงููุณุชุฎุฏููู ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช PostgreSQL ุงูุฎุงุตุฉ ุจู Supabase.

ุชุฎุฒูู ุตูุฑ ุงูููุชุฌุงุช ูู ูุญุฏุฉ ุงูุชุฎุฒูู Supabase Storage ูุฑุจุทูุง ุจุงูููุชุฌุงุช.

ุชูุนูู ูุตุงุฏูุฉ ุจุณูุทุฉ (ุฅุฐุง ูุฒู ุงูุฃูุฑ) ูููุณุชุฎุฏููู ุฃู ููุญุฉ ุงูุฅุฏุงุฑุฉ.

ุชูููุฐ ูู ุงูุนูููุงุช (ุฅุถุงูุฉุ ุญุฐูุ ุชุนุฏููุ ุงุณุชุนูุงู) ุจุงุณุชุฎุฏุงู ููุชุจุฉ @supabase/supabase-js ุจุดูู ุขูู ูููุธูู.

โ ุงูุชูุงุตูู ุงูุฏูููุฉ ุงููุทููุจุฉ:
1๏ธโฃ ุฅุนุฏุงุฏ ุงูุนููู (Client Initialization)
ุฅูุดุงุก ููู supabaseClient.ts ูุฑุจุทู ุจุงูููุงุชูุญ ูู .env.local.

ุงุณุชุฎุฏุงู createClient ุจุดูู ุตุญูุญ ูุฑุจุท ูู ุงูููููุงุช ุจู.

ts
Copy
Edit
import { createClient } from "@supabase/supabase-js";

export const supabase = createClient(
  process.env.NEXT_PUBLIC_SUPABASE_URL!,
  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!
);
2๏ธโฃ ุฅูุดุงุก ุงูุฌุฏุงูู ุงูุชุงููุฉ ูู Supabase:
ุงูุฌุฏูู	ุงูุญููู ุงููุทููุจุฉ
products	id, name, description, price, image_url, stock, category, created_at
orders	id, customer_name, phone, total_price, status, created_at, items (JSON array)
users (ุงุฎุชูุงุฑู)	id, email, name, created_at

ููุงุญุธุฉ: ุญูู items ูู ุงูุทูุจ ูุญุชูู ุนูู [{product_id, quantity}]

3๏ธโฃ ูุซุงู: ุงุณุชุนูุงู ุงูููุชุฌุงุช ูุนุฑุถูุง
ุชูููุฐ ุงุณุชุนูุงู ุฌูุจ ูู ุงูููุชุฌุงุช ุงููุนูุงูุฉ:

ts
Copy
Edit
const { data, error } = await supabase
  .from('products')
  .select('*')
  .eq('is_active', true);
4๏ธโฃ ูุซุงู: ุญูุธ ุทูุจ ุฌุฏูุฏ ุนูุฏ Checkout
ts
Copy
Edit
await supabase.from('orders').insert({
  customer_name: "ุงุณู ุงูุฒุจูู",
  phone: "ุฑูู ุงููุงุชู",
  total_price: 300,
  items: [{ id: "p1", qty: 2 }, { id: "p2", qty: 1 }],
});
5๏ธโฃ ุชุฎุฒูู ุตูุฑ ุงูููุชุฌุงุช ูู Supabase Storage
ุฑูุน ุตูุฑุฉ ููุชุฌ ุฅูู bucket ุงุณูู product-images:

ts
Copy
Edit
const { data, error } = await supabase.storage
  .from('product-images')
  .upload(`products/${file.name}`, file);
ุซู ุงุณุชุฑุฌุงุน ุงูุฑุงุจุท:

ts
Copy
Edit
const publicUrl = supabase.storage
  .from('product-images')
  .getPublicUrl(`products/${file.name}`).data.publicUrl;
6๏ธโฃ ุญูุงูุฉ ุงูุจูุงูุงุช:
ูุง ูุชู ุชุฎุฒูู ููุงุชูุญ API ูุจุงุดุฑุฉ ูู ุงูููุฏ โ ูุชู ุงุณุชุฎุฏุงู .env.local ููุท.

ูุง ุชูุฌุฏ ุนูููุงุช CRUD ุฅูุง ุจุนุฏ ุงูุชุญูู ูู ุตูุงุญูุฉ ุงููุณุชุฎุฏู ุฅู ููุฌุฏ Auth.

7๏ธโฃ ุฅุนุฏุงุฏ ููุญุฉ Supabase:
ุฃูุดุฆ ูุงุนุฏุฉ ุงูุจูุงูุงุช ูุงูุฌุฏุงูู ุจุงุณุชุฎุฏุงู SQL ุฃู ูุงุฌูุฉ Supabase ูุจุงุดุฑุฉ.

ุฃูุดุฆ bucket ููุชุฎุฒูู (ุตูุฑ ุงูููุชุฌุงุช).

ุฌููุฒ ุณูุงุณุฉ ุฃูุงู RLS (Row-Level Security) ุฅุฐุง ูุฒู ุงูุฃูุฑ.

๐ ุงููุชูุฌุฉ ุงููุชููุนุฉ:
ุนูุฏ ุนุฑุถ ุงูููุชุฌุงุชุ ูุชู ุฌูุจูุง ูู Supabase.

ุนูุฏ ุงูุทูุจุ ูุชู ุญูุธ ุจูุงูุงุช ุงูุทูุจ ูู ุฌุฏูู orders.

ุงูุตูุฑ ูุฑููุนุฉ ุฅูู Supabase Storage ูุฑูุงุจุทูุง ุชูุนุฑุถ ุนูู ุงููููุน.

ุงูููุฏ ููุธู ูุขูู ููุงุจู ููุชูุณุนุฉ.

๐ ุงูููุงุญุธุฉ ุงูุฃุฎูุฑุฉ:
ูุฑุฌู ุงูุญูุงุธ ุนูู ุฃูุงู ุงูููุงุชูุญ ูุงุชุจุงุน ุฃูุถู ููุงุฑุณุงุช ุงูุงุชุตุงู ุจุฎุฏูุงุช Supabaseุ ูุนุฏู ุชุฎุฒูู ุจูุงูุงุช ุญุณุงุณุฉ ุฏูู ุญูุงูุฉ ููุงุณุจุฉ (ูุซูุงู ุณูุงุณุฉ Row-Level Security ุฅู ูุฒู).