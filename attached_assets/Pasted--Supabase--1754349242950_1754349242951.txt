๐ฏ ุงููุทููุจ:
ุฑุจุท ุงููููุน ุงูุฅููุชุฑููู (ุงูุฐู ุฃุตุจุญ ูุนูู ุจุงููุงูู) ูุน ูุงุนุฏุฉ ุจูุงูุงุช Supabase ุงูุชู ุชู ุชุซุจูุช ููุชุจุชูุง @supabase/supabase-js ุจูุฌุงุญ.
ุชูููุฐ ุงูุงุชุตุงู ุซู ุงูุจุฏุก ุจู ุฌูุจ ุงูููุชุฌุงุช ูู Supabase ู ุญูุธ ุงูุทูุจุงุช ุงูุฌุฏูุฏุฉ ู ุชุญููู ุงูุตูุฑ.

โ ุงูููุงู ุงููุญุฏุฏุฉ ุงููุทููุจุฉ ุงูุขู (ูุฑุชุจุฉ ุฎุทูุฉ ุจุฎุทูุฉ):
1๏ธโฃ ุฅุนุฏุงุฏ ุงูุงุชุตุงู ูุน Supabase:
ุฃูุดุฆ ููู supabaseClient.ts ุฏุงุฎู ูุฌูุฏ lib ุฃู utils.

ุงูููุฏ ุงููุทููุจ:

ts
Copy
Edit
import { createClient } from '@supabase/supabase-js';

export const supabase = createClient(
  process.env.NEXT_PUBLIC_SUPABASE_URL!,
  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!
);
ุฃุถู ุงูููุงุชูุญ ุฏุงุฎู .env.local:

ini
Copy
Edit
NEXT_PUBLIC_SUPABASE_URL=https://xyz.supabase.co
NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOi...
2๏ธโฃ ุฌูุจ ุงูููุชุฌุงุช ูู Supabase (ุจุฏูุงู ูู ุจูุงูุงุช JSON ุฃู ุซุงุจุชุฉ):
ุฃูุดุฆ ุฏุงูุฉ fetchProducts ูู ููู ุฌุฏูุฏ ุฃู ุฏุงุฎู hook:

ts
Copy
Edit
export async function fetchProducts() {
  const { data, error } = await supabase
    .from('products')
    .select('*')
    .eq('is_active', true);

  if (error) {
    console.error('ุฎุทุฃ ุฃุซูุงุก ุฌูุจ ุงูููุชุฌุงุช:', error);
    return [];
  }

  return data;
}
ูู ุงูุตูุญุฉ ุงูุฑุฆูุณูุฉ ุฃู ุงูููุชุฌุงุชุ ุงุณุชุฎุฏู useEffect ุฃู React Query ูุฌูุจ ุงูููุชุฌุงุช.

3๏ธโฃ ุญูุธ ุงูุทูุจุงุช ูู ุฌุฏูู Supabase ุนูุฏ ุงูุดุฑุงุก:
ุจุนุฏ ุฅุชูุงู ุงูุทูุจ ุนุจุฑ ุงูุณูุฉุ ุฃุถู:

ts
Copy
Edit
await supabase.from('orders').insert({
  customer_name: form.name,
  phone: form.phone,
  total_price: cart.totalPrice,
  items: cart.items.map(item => ({
    product_id: item.product.id,
    quantity: item.quantity
  }))
});
4๏ธโฃ ุชุฎุฒูู ุตูุฑ ุงูููุชุฌุงุช ูู Supabase Storage:
ุจุนุฏ ุฑูุน ุงูุตูุฑุฉ ุนุจุฑ input:

ts
Copy
Edit
const { data, error } = await supabase.storage
  .from('product-images')
  .upload(`products/${file.name}`, file);

const imageUrl = supabase.storage
  .from('product-images')
  .getPublicUrl(`products/${file.name}`).data.publicUrl;
ุงุณุชุฎุฏู imageUrl ูุญูุธู ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช ูุน ุงูููุชุฌ.

5๏ธโฃ ุงูุชุญูู ูู ุงูุชูุงูู:
ุนูุฏ ูุชุญ ุงููููุน โ ุชูุนุฑุถ ุงูููุชุฌุงุช ูู Supabase.

ุนูุฏ ุงูุทูุจ โ ููุญูุธ ุงูุทูุจ ุฏุงุฎู Supabase Table.

ุนูุฏ ุฑูุน ุตูุฑุฉ โ ุชูุฑูุน ูุชุธูุฑ ุจุดูู ูุจุงุดุฑ.

๐ ุงููุนุงููุฑ ุงููุทููุจุฉ ููุชูููุฐ:
ุงุณุชุฎุฏุงู TypeScript ูุฌููุน ุงูุฏูุงู.

ุงูุชุนุงูู ูุน ุงูุฃุฎุทุงุก ุจุดูู ุขูู (log + fallback).

ุนุฏู ูุดู ููุงุชูุญ API ุฏุงุฎู ุงูููุฏุ ูููุง ูู .env.

ูุชุงุจุฉ ุงูููุฏ ุฏุงุฎู ูููุงุช ููุธูุฉ (lib/supabaseClient.ts, hooks/useProducts.ts, ุฅูุฎ).

ุงุฎุชุจุงุฑ ูู ุฎุทูุฉ ุนุจุฑ console ุฃู UI.

โ ุจุนุฏ ุฅุชูุงู ุงูุฑุจุทุ ุฃุฑูุฏ ุชุฃููุฏ ุฃู:

ุงููููุน ูุฌูุจ ุงูููุชุฌุงุช ูู Supabase.

ุงูุทูุจุงุช ุชูุญูุธ ุฏุงุฎู Supabase.

ุงูุตูุฑ ุชูุฑูุน ูุชุธูุฑ ุจุดูู ูุจุงุดุฑ.

