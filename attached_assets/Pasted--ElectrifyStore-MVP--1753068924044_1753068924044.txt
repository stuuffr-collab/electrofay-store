🚩 الهدف: رفع مشروع ElectrifyStore الحالي من نسخة MVP إلى متجر إنتاجي كامل، سريع، آمن، محسَّن للسيو، ومهيّأ للتوسع.

━━━━━━━━━━━━━━━
🔰 0. تنظيف المشروع
━━━━━━━━━━━━━━━
1. احذف مجلّد ‎.git‎ الموجود داخل الـZIP قبل إعادة الضغط (يقلِّل الحجم ويمنع كشف الـhistory).  
2. أنشئ مجلد ‎docs/‎ لنقل لقطات الشاشة (Lighthouse) وملفات التوثيق الثانوية.

━━━━━━━━━━━━━━━
🎨 1. تحسين الهوية البصرية
━━━━━━━━━━━━━━━
1. استبدل FontAwesome بـ **Lucide SVG Icons** عبر `lucide-react`.  
2. أضف تدرّج أصفر نيون → برتقالي خفيف للأزرار الرئيسة (`bg-gradient-to-r from-[#FFD700] to-[#FFB300]`).  
3. أنشئ ملف `src/styles/tokens.css` أو عدّل `tailwind.config.ts` لتعريف:  
   - `--color-primary` ، `--color-secondary`  
   - `--radius-card: 1rem;` (`rounded-2xl`)  
   - Spacing, font-sizes, z‑index tokens.

━━━━━━━━━━━━━━━
⚙️ 2. تجربة الطلب
━━━━━━━━━━━━━━━
1. في `OrderModal.tsx`:  
   • أضف **Regex** ‎`/^09\\d{8}$/`‎ للحقل `phone`.  
   • أدرج **reCAPTCHA v2 checkbox** (siteKey من ‎.env).  
2. بعد فتح واتساب، استدعِ ‎`toast.success("📦 تم استلام طلبك – سنتواصل خلال دقائق")`‎ باستخدام ‎`react-hot-toast`‎.  
3. أضف شارة ديناميكية على بطاقة المنتج:  
   `const remaining = Math.floor(Math.random()*5)+1;` → “⚡ متبقّي {remaining} قطع”.  
4. في Banner العروض، فعِّل **عدّاد Countdown** بــ `react-countdown` (24 ساعة).

━━━━━━━━━━━━━━━
⚡ 3. الأداء والـPWA
━━━━━━━━━━━━━━━
1. حوّل كل صور المنتجات إلى ‎WebP‎ (600×400) واحذف الأصلية، ثم أضف `loading="lazy" decoding="async"`.  
2. ثبّت **`vite-plugin-pwa`**:  
   - `npm i -D vite-plugin-pwa`  
   - أضف إلى `vite.config.ts` توليد `manifest.json` (اسم، أيقونة، themeColor).  
3. فعِّل تقسيم الأكواد: استخدم `React.lazy` + `Suspense` لكل صفحة ‎(Home, Offers, Product, About, Contact)‎.

━━━━━━━━━━━━━━━
🔍 4. SEO
━━━━━━━━━━━━━━━
1. ثبّت **`vite-plugin-sitemap`** لإنشاء `sitemap.xml` تلقائيًا.  
2. أضف ملف `public/robots.txt` بمحتوى:  
User-agent: *
Allow: /

markdown
Copy
Edit
3. في `index.html`, أضف meta OpenGraph وTwitter Card placeholders:  
- og:title, og:description, og:image, og:url, twitter:card.  
4. أنشئ صفحة 404 React أنيقة (تعيد المستخدم للرئيسية).

━━━━━━━━━━━━━━━
📊 5. التحليلات
━━━━━━━━━━━━━━━
1. أضف `react-ga4` (أو `@vercel/analytics` بديلًا خفيفًا).  
2. أخزن Measurement ID في ‎`.env`‎:  
VITE_GA_ID=G-XXXXXXXXXX

markdown
Copy
Edit
3. أرسل أحداث: `view_item`, `add_to_cart` (عند ضغط اطلب الآن), `purchase` (عند فتح واتساب).

━━━━━━━━━━━━━━━
📦 6. Webhook تسجيل الطلبات
━━━━━━━━━━━━━━━
1. في مسار ‎`/server/api/order`‎:  
- احصل على بيانات الطلب POST.  
- استخدم Google Sheets API أو Supabase لإضافة صف جديد (تاريخ، اسم، هاتف، منتج، مدينة).  
2. من الـFront‑End استدعِ هذا المسار **بعد** toast النجاح (لا يُعيق فتح واتساب).

━━━━━━━━━━━━━━━
🔗 7. المشاركة والتفاعل
━━━━━━━━━━━━━━━
1. ثبّت `react-share`، وأضف أزرار مشاركة المنتج (واتساب، فيسبوك، تويتر) في صفحة المنتج.  
2. أنشئ صفحة `Testimonials.tsx` تعرض 3‑5 آراء يدويًا (صورة واتساب + نص).  
3. بنر أعلى الـNavbar: “وصلت الآن 🔥” – يشحب البيانات من قائمة `newArrival` في `products.json`.

━━━━━━━━━━━━━━━
🛡️ 8. أمان ونشر
━━━━━━━━━━━━━━━
1. ارفع المشروع على Vercel؛ تأكد من HTTPS + HSTS مفعَّل.  
2. أضف ملف `.env.example` يتضمن:  
VITE_GA_ID=
RECAPTCHA_SITE_KEY=
RECAPTCHA_SECRET_KEY=
DB_URL=

markdown
Copy
Edit
3. حدِّث README بشرح:  
- إعداد البيئة، بناء المشروع، نشر Vercel  
- كيفية إضافة منتج جديد في `products.json` أو Supabase  
- كيفية تغيير صور WebP.

━━━━━━━━━━━━━━━
🎁 9. تسليم
━━━━━━━━━━━━━━━
• شغّل Lighthouse Mobile، تأكد Performance ≥ 90 وSEO ≥ 95.  
• ضع لقطة الشاشة في `docs/`.  
• اضغط المشروع في ‎ZIP‎ (دون مجلد .git) أو ارفع Pull Request.

🔚 عند الانتهاء، وفّر لي رابط ZIP النهائي أو رابط الـPR.